name: Build and Release Go Binary

on:
  workflow_dispatch:
    inputs:
      custom_version:
        description: "Custom version to use instead of 'latest'"
        required: false
        default: "latest"  # Default value if not provided

permissions:
  contents: write

jobs:
  get-version:
    uses: ./.github/workflows/extract-version.yml
    with:
      custom_version: ${{ github.event.inputs.custom_version }}  # Pass the custom version to extract-version

  build-linux:
    needs: get-version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Build binary
        working-directory: apps/tag-replacer-go  
        run: |
          GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go mod tidy
          GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o tag-replacer-linux .
          chmod +x tag-replacer-linux

      - name: List files
        run: ls -la ./apps/tag-replacer-go

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: apps/tag-replacer-go/tag-replacer-linux
          tag_name: ${{ needs.get-version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-windows:
    needs: get-version
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Build binary
        working-directory: apps/tag-replacer-go
        run: |
          go mod tidy
          go build -o tag-replacer-windows.exe .

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: apps/tag-replacer-go/tag-replacer-windows.exe
          tag_name: ${{ needs.get-version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}    

  build-macos:
    needs: get-version
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Build binary
        working-directory: apps/tag-replacer-go
        run: |
            GOOS=darwin GOARCH=amd64 CGO_ENABLED=0 go mod tidy
            GOOS=darwin GOARCH=amd64 CGO_ENABLED=0 go build -o tag-replacer-macos .
            chmod +x tag-replacer-macos

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: apps/tag-replacer-go/tag-replacer-macos
          tag_name: ${{ needs.get-version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
